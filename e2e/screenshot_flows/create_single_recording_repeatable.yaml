# Create single recording - assumes app is already launched and on home screen
appId: com.jhaa.healthlogger.devtest
---
# Ensure we're on the home screen
# - tapOn: {id: 'homeTabButton'}
# - waitForAnimationToEnd:
#     timeout: 1000

# Create recording
- tapOn: {id: 'record-button'}

# Wait for navigation to recording detail screen to complete
- assertVisible: {id: 'recording-detail-screen'}
- assertVisible: {id: 'stop-recording-button'}

# Conditionally take screenshot of recording screen
- runFlow:
    when:
      true: ${shouldScreenshotRecordingScreen === "true"}
    commands:
      - assertVisible: # Make sure we're in the appearance mode we expect
          {id: 'test-appearance-mode-is-${testAppearanceMode}'}
      - takeScreenshot: '${MAESTRO_SCREENSHOT_OUTPUT_DIR || "e2e/screenshots"}/recording_active_${testAppearanceMode || "UNKNOWN"}'

# Record for specified duration using extendedWaitUntil timeout
# TODO: This previously used `recordingDuration`, but now doesn't. We should clean that up.
- extendedWaitUntil:
    visible: {text: '0:02'} # Wait until we see a recording duration of 2 seconds, or otherwise wait until the timeout
    optional: true
    timeout: 5000

# - assertVisible: {text: "0:03", optional: true}

# Stop recording
- tapOn: {id: 'stop-recording-button'}

# Wait for transition to playback screen to complete
- assertVisible: {id: 'playback-detail-screen-loaded'}
- assertVisible: {id: 'start-or-pause-playback-button'}

# Conditionally take screenshot of playback screen
- runFlow:
    when:
      true: ${shouldScreenshotPlaybackScreen === "true"}
    commands:
      - assertVisible: # Make sure we're in the appearance mode we expect
          {id: 'test-appearance-mode-is-${testAppearanceMode || "light"}'}
      - takeScreenshot: '${MAESTRO_SCREENSHOT_OUTPUT_DIR || "e2e/screenshots"}/playback_screen_${testAppearanceMode || "UNKNOWN"}'

# Navigate back to home screen
- tapOn: {id: 'detail-screen-back-button'}
- assertVisible: {id: 'home-screen'}
